<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.lex.dao.LessonStudentDao">

	<select id="get" resultType="com.bootdo.lex.domain.LessonStudentDO">
		select `id`,`lessonId`,`userId`,`createTime`,`state` from lex_lesson_student where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.lex.domain.LessonStudentDO">
-- 		select `id`,`lessonId`,`userId`,`createTime`,`state`,
-- 		lex_lesson.lessonName as lessonName from lex_lesson_student LEFT JOIN lex_lesson on lex_lesson_student.lessonId = lex_lesson.id
		SELECT lex_lesson_student.id ,
		`lessonId` ,
		`userId` ,
		lex_lesson_student.createTime ,
		lex_lesson_student.state ,
		lex_lesson.lessonName AS lessonName FROM lex_lesson_student LEFT JOIN lex_lesson ON lex_lesson_student.lessonId=lex_lesson.id

        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="lessonid != null and lessonid != ''"> and lessonId = #{lessonid} </if>
		  		  <if test="userid != null and userid != ''"> and userId = #{userid} </if>
		  		  <if test="createtime != null and createtime != ''"> and createTime = #{createtime} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from lex_lesson_student
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="lessonid != null and lessonid != ''"> and lessonId = #{lessonid} </if>
		  		  <if test="userid != null and userid != ''"> and userId = #{userid} </if>
		  		  <if test="createtime != null and createtime != ''"> and createTime = #{createtime} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.lex.domain.LessonStudentDO" useGeneratedKeys="true" keyProperty="id">
		insert into lex_lesson_student
		(
			`lessonId`, 
			`userId`, 
			`createTime`, 
			`state`
		)
		values
		(
			#{lessonid}, 
			#{userid}, 
			#{createtime}, 
			#{state}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.lex.domain.LessonStudentDO">
		update lex_lesson_student 
		<set>
			<if test="lessonid != null">`lessonId` = #{lessonid}, </if>
			<if test="userid != null">`userId` = #{userid}, </if>
			<if test="createtime != null">`createTime` = #{createtime}, </if>
			<if test="state != null">`state` = #{state}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from lex_lesson_student where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from lex_lesson_student where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>